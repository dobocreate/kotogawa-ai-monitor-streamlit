name: Data Collection

on:
  schedule:
    # 本番用設定: 10分ごとに実行 (UTC時間) - 毎時3分から開始
    # - cron: '3,13,23,33,43,53 * * * *'
    # 開発用設定: 1時間ごとに実行
    - cron: '3 * * * *'
  workflow_dispatch: # 手動実行も可能

jobs:
  collect-data:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-v2-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-v2-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Force reinstall to avoid cache issues
        pip install --force-reinstall --no-cache-dir -r requirements.txt
        echo "=== Installed packages ==="
        pip list
        echo "=== Python version ==="
        python --version
        echo "=== Checking critical imports ==="
        python -c "import requests; print('✓ requests installed')"
        python -c "import bs4; print('✓ beautifulsoup4 installed')"
        python -c "import pandas; print('✓ pandas installed')"
        
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Run data collection
      run: |
        echo "Starting data collection..."
        python scripts/collect_data.py || {
          echo "::error::Data collection failed with exit code $?"
          exit 1
        }
        
    - name: Check for changes
      id: changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git add data/
        git commit -m "📊 Update monitoring data - $(date '+%Y-%m-%d %H:%M:%S UTC')"
        git pull --rebase origin master
        git push
        
    - name: Cleanup on failure
      if: failure()
      run: |
        echo "Data collection failed at $(date)"
        # Optional: Create error log
        echo "$(date): Data collection failed" >> data/error.log || true